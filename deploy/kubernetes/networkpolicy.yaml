# Network policy to secure inter-service communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sentio-rag-network-policy
  namespace: sentio-rag
  labels:
    app.kubernetes.io/name: sentio-rag
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: sentio-rag
      app.kubernetes.io/instance: production
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  # Allow ingress from monitoring (Prometheus)
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  # Allow ingress from other pods in the same namespace
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: sentio-rag-system
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
  egress:
  # Allow egress to Qdrant
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: qdrant
    ports:
    - protocol: TCP
      port: 6333
    - protocol: TCP
      port: 6334
  # Allow egress to Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to external APIs (OpenAI, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 80   # HTTP
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Network policy for Qdrant
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: qdrant-network-policy
  namespace: sentio-rag
  labels:
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: qdrant
      app.kubernetes.io/instance: production
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from Sentio RAG application
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: sentio-rag
    ports:
    - protocol: TCP
      port: 6333
    - protocol: TCP
      port: 6334
  # Allow ingress from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 6333
  egress:
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Network policy for Redis
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: sentio-rag
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: production
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from Sentio RAG application
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: sentio-rag
    ports:
    - protocol: TCP
      port: 6379
  # Allow ingress from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 6379
  egress:
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53